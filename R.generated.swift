//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 colors.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 0 images.
  struct image {
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 7 nibs.
  struct nib {
    /// Nib `Timeline1View`.
    static let timeline1View = _R.nib._Timeline1View()
    /// Nib `Timeline2View`.
    static let timeline2View = _R.nib._Timeline2View()
    /// Nib `Timeline3View`.
    static let timeline3View = _R.nib._Timeline3View()
    /// Nib `Timeline4View`.
    static let timeline4View = _R.nib._Timeline4View()
    /// Nib `Timeline5View`.
    static let timeline5View = _R.nib._Timeline5View()
    /// Nib `TimelineCell`.
    static let timelineCell = _R.nib._TimelineCell()
    /// Nib `TimelineTitleView`.
    static let timelineTitleView = _R.nib._TimelineTitleView()
    
    /// `UINib(name: "Timeline1View", in: bundle)`
    static func timeline1View(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.timeline1View)
    }
    
    /// `UINib(name: "Timeline2View", in: bundle)`
    static func timeline2View(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.timeline2View)
    }
    
    /// `UINib(name: "Timeline3View", in: bundle)`
    static func timeline3View(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.timeline3View)
    }
    
    /// `UINib(name: "Timeline4View", in: bundle)`
    static func timeline4View(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.timeline4View)
    }
    
    /// `UINib(name: "Timeline5View", in: bundle)`
    static func timeline5View(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.timeline5View)
    }
    
    /// `UINib(name: "TimelineCell", in: bundle)`
    static func timelineCell(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.timelineCell)
    }
    
    /// `UINib(name: "TimelineTitleView", in: bundle)`
    static func timelineTitleView(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.timelineTitleView)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 0 reuse identifiers.
  struct reuseIdentifier {
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `Main`.
    static let main = _R.storyboard.main()
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "Main", bundle: ...)`
    static func main(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.main)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 0 localization tables.
  struct string {
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      // There are no resources to validate
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R {
  struct nib {
    struct _Timeline1View: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "Timeline1View"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    struct _Timeline2View: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "Timeline2View"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    struct _Timeline3View: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "Timeline3View"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    struct _Timeline4View: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "Timeline4View"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    struct _Timeline5View: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "Timeline5View"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    struct _TimelineCell: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "TimelineCell"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> TimelineCell? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? TimelineCell
      }
      
      fileprivate init() {}
    }
    
    struct _TimelineTitleView: Rswift.NibResourceType {
      let bundle = R.hostingBundle
      let name = "TimelineTitleView"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> UIKit.UIView? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? UIKit.UIView
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  struct storyboard {
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    struct main: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = ViewController
      
      let bundle = R.hostingBundle
      let name = "Main"
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
